/// <reference types="react" />
/**
 * Copyright (c) 2017-present, Ephox, Inc.
 *
 * This source code is licensed under the Apache 2 license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */
import * as React from 'react';
import { EventHandler, IEvents } from '../Events';
import { IEditorPropTypes } from './EditorPropTypes';
export interface IProps {
    apiKey: string;
    id: string;
    inline: boolean;
    initialValue: string;
    onEditorChange: EventHandler<any>;
    value: string;
    init: Record<string, any>;
    tagName: string;
    cloudChannel: string;
    plugins: string | string[];
    toolbar: string | string[];
    disabled: boolean;
    textareaName: string;
}
export interface IAllProps extends Partial<IProps>, Partial<IEvents> {
}
export declare class Editor extends React.Component<IAllProps> {
    static propTypes: IEditorPropTypes;
    private element;
    private id?;
    private editor?;
    private inline?;
    private currentContent?;
    componentWillMount(): void;
    componentDidMount(): void;
    componentWillUnmount(): void;
    componentWillReceiveProps(nextProps: Partial<IProps>): void;
    render(): JSX.Element | React.ReactElement<{
        ref: (elm: Element | null) => Element | null;
        id: string | undefined;
    }>;
    private initialise;
    private initEditor(initEvent, editor);
    private renderInline();
    private renderIframe();
}
