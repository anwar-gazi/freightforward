# Generated by Django 3.2 on 2022-06-17 09:54

from django.conf import settings
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import freightman.mixins
import freightman.model_validators
import freightman.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='SystemUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
                'swappable': 'AUTH_USER_MODEL',
            },
            bases=(models.Model, freightman.mixins.AuthMixin),
            managers=[
                ('objects', freightman.models.SystemUserManager()),
            ],
        ),
        migrations.CreateModel(
            name='AddressBook',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(max_length=200)),
                ('address', models.TextField()),
                ('postcode', models.CharField(blank=True, max_length=10, null=True)),
                ('state', models.CharField(blank=True, default='', max_length=50, null=True)),
                ('contact', models.CharField(blank=True, max_length=200, null=True)),
                ('phone', models.CharField(max_length=30)),
                ('mobile', models.CharField(max_length=30)),
                ('fax', models.CharField(blank=True, default='', max_length=30)),
                ('email', models.EmailField(max_length=254)),
                ('is_default', models.BooleanField(default=False)),
                ('is_shipper', models.BooleanField(default=False)),
                ('is_consignee', models.BooleanField(default=False)),
                ('is_consignor', models.BooleanField(default=False)),
                ('is_pickup', models.BooleanField(default=False)),
                ('is_delivery', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='AirExportConsolHouseMap',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='AirExportConsolidatedShipment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='AirExportConsolidatedShipmentCreditNote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('to_who', models.CharField(choices=[('master_consignee', 'master_consignee'), ('house_supplier', 'house_supplier'), ('house_shipper', 'house_shipper')], max_length=50)),
                ('date', models.DateField()),
                ('entry_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('consolidated_shipment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='airexptconsshptcreditnote', related_query_name='airexptconsshptcreditnote', to='freightman.airexportconsolidatedshipment')),
            ],
        ),
        migrations.CreateModel(
            name='AirExportConsolidatedShipmentDebitNote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('to_who', models.CharField(choices=[('master_consignee', 'master_consignee'), ('house_supplier', 'house_supplier'), ('house_shipper', 'house_shipper')], max_length=50)),
                ('date', models.DateField()),
                ('entry_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('consolidated_shipment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='airexptconsshptdebitnote', related_query_name='airexptconsshptdebitnote', to='freightman.airexportconsolidatedshipment')),
            ],
        ),
        migrations.CreateModel(
            name='Airline',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prefix_number', models.IntegerField(unique=True)),
                ('prefix_code', models.CharField(max_length=2)),
                ('name', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Airport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=3, unique=True)),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='AWBAgent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('iata_code', models.CharField(max_length=12)),
                ('ffl_number', models.CharField(blank=True, max_length=12, null=True)),
                ('ffl_exp_date', models.DateField(blank=True, null=True)),
                ('addressbook', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='freightman.addressbook')),
            ],
        ),
        migrations.CreateModel(
            name='Bank',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bank_name', models.CharField(max_length=50)),
                ('active', models.BooleanField(default=True)),
                ('added_at', models.DateTimeField(auto_now_add=True)),
                ('added_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('bank_name',)},
            },
        ),
        migrations.CreateModel(
            name='BankBranch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('branch_name', models.CharField(max_length=50, verbose_name='branch name')),
                ('branch_address', models.TextField()),
                ('active', models.BooleanField(default=True)),
                ('added_at', models.DateTimeField(auto_now_add=True)),
                ('added_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('bank', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bankbranch', related_query_name='bankbranch', to='freightman.bank')),
            ],
            options={
                'unique_together': {('bank', 'branch_name')},
            },
        ),
        migrations.CreateModel(
            name='ChargeType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('code_isoa2', models.CharField(max_length=2)),
            ],
        ),
        migrations.CreateModel(
            name='Currency',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=3, unique=True)),
                ('currency_name', models.CharField(max_length=20)),
                ('default', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='FreightBooking',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('edd', models.DateField(blank=True, null=True)),
                ('entry_at', models.DateTimeField(auto_now_add=True)),
                ('is_draft', models.BooleanField(default=False)),
                ('is_booking_confirmed', models.BooleanField(default=False)),
                ('confirmed_at', models.DateTimeField(blank=True, null=True)),
                ('entry_complete', models.BooleanField(default=False)),
                ('confirmed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='freightbookingconfirmedby', to=settings.AUTH_USER_MODEL)),
                ('entry_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='FreightBookingGoodsInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('no_of_pieces', models.IntegerField()),
                ('weight_kg', models.FloatField()),
                ('chargable_weight', models.FloatField()),
                ('volumetric_weight', models.FloatField()),
                ('cbm', models.FloatField()),
                ('length_cm', models.FloatField()),
                ('width_cm', models.FloatField()),
                ('height_cm', models.FloatField()),
                ('quantity', models.IntegerField()),
                ('unit_price', models.FloatField()),
                ('shipping_mark', models.TextField(default='')),
                ('goods_desc', models.TextField(default='')),
                ('booking', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_query_name='booking_goodsinfo', to='freightman.freightbooking')),
                ('currency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='freightman.currency')),
            ],
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, unique=True)),
                ('active', models.BooleanField(default=True)),
                ('prefix', models.CharField(max_length=3, unique=True, validators=[freightman.model_validators.validate_org_prefix_length])),
                ('is_supplier', models.BooleanField(default=False)),
                ('is_buyer', models.BooleanField(default=False)),
                ('is_factory', models.BooleanField(default=False)),
                ('is_shipper', models.BooleanField(default=False)),
                ('is_forwarder', models.BooleanField(default=False)),
                ('booking_mail_sending_enabled', models.BooleanField(default=False)),
                ('entry_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='PaymentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='TermsofDelivery',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=3, unique=True)),
                ('title', models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='TimeZone',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tz_name', models.CharField(max_length=200, unique=True)),
                ('utc_offset_sign', models.CharField(max_length=1)),
                ('utc_offset_hour', models.IntegerField(validators=[django.core.validators.MaxValueValidator(24), django.core.validators.MinValueValidator(0)])),
                ('utc_offset_minute', models.IntegerField(validators=[django.core.validators.MaxValueValidator(60), django.core.validators.MinValueValidator(0)])),
            ],
        ),
        migrations.CreateModel(
            name='UserOrganizationMap',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='freightman.organization')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TransportAgreement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=30)),
                ('details', models.TextField()),
                ('org', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='freightman.organization')),
            ],
            options={
                'unique_together': {('org', 'title')},
            },
        ),
        migrations.CreateModel(
            name='StakeholderReferenceTypes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('org', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='freightman.organization')),
            ],
            options={
                'unique_together': {('org', 'name')},
            },
        ),
        migrations.CreateModel(
            name='PackageType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, unique=True)),
                ('org', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='freightman.organization')),
            ],
        ),
        migrations.CreateModel(
            name='MAWB',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mawb_number', models.CharField(max_length=11)),
                ('requested_routing', models.TextField(blank=True, null=True)),
                ('to_1_flight_num', models.CharField(blank=True, max_length=200, null=True)),
                ('to_1_flight_date', models.DateField(blank=True, null=True)),
                ('to_2_flight_num', models.CharField(blank=True, max_length=200, null=True)),
                ('to_2_flight_date', models.DateField(blank=True, null=True)),
                ('to_3_flight_num', models.CharField(blank=True, max_length=200, null=True)),
                ('to_3_flight_date', models.DateField(blank=True, null=True)),
                ('requested_flight_date', models.DateField(blank=True, null=True)),
                ('carrier_agent_name', models.CharField(max_length=50)),
                ('carrier_agent_state', models.CharField(max_length=30)),
                ('carrier_agent_ffl_no', models.CharField(max_length=50)),
                ('carrier_agent_date', models.DateField(blank=True, null=True)),
                ('carrier_agent_iata_code', models.IntegerField()),
                ('carrier_agent_account_no', models.CharField(max_length=30)),
                ('cngs_code', models.CharField(blank=True, max_length=200, null=True)),
                ('declared_val_for_carriage', models.CharField(blank=True, max_length=200, null=True)),
                ('declared_val_for_customs', models.CharField(blank=True, max_length=200, null=True)),
                ('amt_of_insurance', models.CharField(max_length=10)),
                ('handling_info', models.TextField(blank=True, null=True)),
                ('goods_noofpcsrcp', models.IntegerField(blank=True, null=True)),
                ('goods_grossweight', models.FloatField(blank=True, null=True)),
                ('goods_weightunit', models.CharField(blank=True, max_length=2, null=True)),
                ('goods_commodityitemno', models.CharField(blank=True, max_length=200, null=True)),
                ('goods_chargableweight', models.FloatField(blank=True, null=True)),
                ('goods_ratecharge', models.FloatField(blank=True, null=True)),
                ('goods_total', models.TextField(blank=True, null=True)),
                ('goods_natureandquantity', models.TextField(blank=True, null=True)),
                ('weightcharge_prepaid', models.FloatField(blank=True, null=True)),
                ('weightcharge_collect', models.FloatField(blank=True, null=True)),
                ('valuationcharge_prepaid', models.FloatField(blank=True, null=True)),
                ('valuationcharge_collect', models.FloatField(blank=True, null=True)),
                ('tax_prepaid', models.FloatField(blank=True, null=True)),
                ('tax_collect', models.FloatField(blank=True, null=True)),
                ('totalotherchargesdueagent_prepaid', models.FloatField(blank=True, null=True)),
                ('totalotherchargesdueagent_collect', models.FloatField(blank=True, null=True)),
                ('totalotherchargesduecarrier_prepaid', models.FloatField(blank=True, null=True)),
                ('totalotherchargesduecarrier_collect', models.FloatField(blank=True, null=True)),
                ('total_prepaid', models.FloatField(blank=True, null=True)),
                ('total_collect', models.FloatField(blank=True, null=True)),
                ('currencyconversionrate', models.FloatField(blank=True, null=True)),
                ('ccchargesindestcurrency', models.FloatField(blank=True, null=True)),
                ('chargesatdestination_collect', models.FloatField(blank=True, null=True)),
                ('totalcharges_collect', models.FloatField(blank=True, null=True)),
                ('charges_other', models.FloatField(blank=True, null=True)),
                ('signature_shipperoragent', models.CharField(blank=True, max_length=200, null=True)),
                ('executed_on_date', models.DateField(blank=True, null=True)),
                ('signature_issuingcarrieroragent', models.CharField(blank=True, max_length=200, null=True)),
                ('entry_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('airport_of_departure', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='mawb_airportofdeparture', related_query_name='mawb_airportofdeparture', to='freightman.airport')),
                ('airport_of_destination', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='mawb_airportofdestination', related_query_name='mawb_airportofdestination', to='freightman.airport')),
                ('carrier_agent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mawb_carrieragent', related_query_name='mawb_carrieragent', to='freightman.awbagent')),
                ('carrier_agent_city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='freightman.city')),
                ('carrier_agent_country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='freightman.country')),
                ('consignee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_query_name='mawb_consignee', to='freightman.addressbook')),
                ('currency', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='mawb_currency', related_query_name='mawb_currency', to='freightman.currency')),
                ('entry_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('executed_at_city', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='mawb_executedatcity', related_query_name='mawb_executedatcity', to='freightman.city')),
                ('forwarder', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='freightman.organization')),
                ('other_payment_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='mawb_otherpaymenttype', related_query_name='mawb_otherpaymenttype', to='freightman.paymenttype')),
                ('payment_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='mawb_paymenttype', related_query_name='mawb_paymenttype', to='freightman.paymenttype')),
                ('reff_no_1', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='mawb_ref1', related_query_name='mawb_ref1', to='freightman.stakeholderreferencetypes')),
                ('reff_no_2', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='mawb_ref2', related_query_name='mawb_ref2', to='freightman.stakeholderreferencetypes')),
                ('reff_no_3', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='mawb_ref3', related_query_name='mawb_ref3', to='freightman.stakeholderreferencetypes')),
                ('shipper', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='mawb_shipper', related_query_name='mawb_shipper', to='freightman.addressbook')),
                ('to_1_airline', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='mawb_to1_airline', related_query_name='mawb_to1_airline', to='freightman.airline')),
                ('to_1_airport', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='mawb_to1_airport', related_query_name='mawb_to1_airport', to='freightman.airport')),
                ('to_2_airline', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='mawb_to2_airline', related_query_name='mawb_to2_airline', to='freightman.airline')),
                ('to_2_airport', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='mawb_to2_airport', related_query_name='mawb_to2_airport', to='freightman.airport')),
                ('to_3_airline', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='mawb_to3_airline', related_query_name='mawb_to3_airline', to='freightman.airline')),
                ('to_3_airport', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='mawb_to3_airport', related_query_name='mawb_to3_airport', to='freightman.airport')),
                ('wt_val_payment_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='mawb_wtvalpaymenttype', related_query_name='mawb_wtvalpaymenttype', to='freightman.paymenttype')),
            ],
        ),
        migrations.CreateModel(
            name='HAWB',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('requested_routing', models.TextField(blank=True, null=True)),
                ('to_1_flight_num', models.CharField(blank=True, max_length=200, null=True)),
                ('to_1_flight_date', models.DateField(blank=True, null=True)),
                ('to_2_flight_num', models.CharField(blank=True, max_length=200, null=True)),
                ('to_2_flight_date', models.DateField(blank=True, null=True)),
                ('to_3_flight_num', models.CharField(blank=True, max_length=200, null=True)),
                ('to_3_flight_date', models.DateField(blank=True, null=True)),
                ('requested_flight_info', models.TextField(default='')),
                ('carrier_agent_name', models.CharField(max_length=50)),
                ('carrier_agent_state', models.CharField(max_length=30)),
                ('carrier_agent_ffl_no', models.CharField(max_length=50)),
                ('carrier_agent_date', models.DateField(blank=True, null=True)),
                ('carrier_agent_iata_code', models.IntegerField(blank=True, null=True)),
                ('carrier_agent_account_no', models.CharField(max_length=30)),
                ('cngs_code', models.CharField(blank=True, max_length=200, null=True)),
                ('declared_val_for_carriage', models.CharField(max_length=30)),
                ('declared_val_for_customs', models.CharField(max_length=30)),
                ('amt_of_insurance', models.CharField(max_length=30)),
                ('handling_info', models.TextField(blank=True, null=True)),
                ('goods_noofpcsrcp', models.IntegerField(blank=True, null=True)),
                ('goods_grossweight', models.FloatField(blank=True, null=True)),
                ('goods_weightunit', models.CharField(blank=True, max_length=2, null=True)),
                ('goods_commodityitemno', models.TextField(default='')),
                ('goods_chargableweight', models.FloatField(blank=True, null=True)),
                ('goods_ratecharge', models.FloatField(blank=True, null=True)),
                ('goods_total', models.FloatField(blank=True, null=True)),
                ('goods_natureandquantity', models.TextField(blank=True, null=True)),
                ('weightcharge_prepaid', models.FloatField(blank=True, null=True)),
                ('weightcharge_collect', models.FloatField(blank=True, null=True)),
                ('valuationcharge_prepaid', models.FloatField(blank=True, null=True)),
                ('valuationcharge_collect', models.FloatField(blank=True, null=True)),
                ('tax_prepaid', models.FloatField(blank=True, null=True)),
                ('tax_collect', models.FloatField(blank=True, null=True)),
                ('totalotherchargesdueagent_prepaid', models.FloatField(blank=True, null=True)),
                ('totalotherchargesdueagent_collect', models.FloatField(blank=True, null=True)),
                ('totalotherchargesduecarrier_prepaid', models.FloatField(blank=True, null=True)),
                ('totalotherchargesduecarrier_collect', models.FloatField(blank=True, null=True)),
                ('total_prepaid', models.FloatField(blank=True, null=True)),
                ('total_collect', models.FloatField(blank=True, null=True)),
                ('currencyconversionrate', models.FloatField(blank=True, null=True)),
                ('ccchargesindestcurrency', models.FloatField(blank=True, null=True)),
                ('chargesatdestination_collect', models.FloatField(blank=True, null=True)),
                ('totalcharges_collect', models.FloatField(blank=True, null=True)),
                ('charges_other', models.FloatField(blank=True, null=True)),
                ('signature_shipperoragent', models.CharField(blank=True, max_length=200, null=True)),
                ('executed_on_date', models.DateField(blank=True, null=True)),
                ('signature_issuingcarrieroragent', models.CharField(blank=True, max_length=200, null=True)),
                ('entry_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('received_at_estimated', models.DateTimeField(blank=True, null=True)),
                ('received_at_actual', models.DateTimeField(blank=True, null=True)),
                ('airport_of_departure', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='hawb_airportofdeparture', related_query_name='hawb_airportofdeparture', to='freightman.airport')),
                ('airport_of_destination', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='hawb_airportofdestination', related_query_name='hawb_airportofdestination', to='freightman.airport')),
                ('booking', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='hawb_booking', related_query_name='booking_hawb', to='freightman.freightbooking')),
                ('carrier_agent_city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='freightman.city')),
                ('carrier_agent_country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='freightman.country')),
                ('consignee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_query_name='hawb_consignee', to='freightman.addressbook')),
                ('currency', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='hawb_currency', related_query_name='hawb_currency', to='freightman.currency')),
                ('entry_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('executed_at_city', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='hawb_executedatcity', related_query_name='hawb_executedatcity', to='freightman.city')),
                ('forwarder', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='freightman.organization')),
                ('house', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='hawb_org', to='freightman.organization')),
                ('other_payment_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='hawb_otherpaymenttype', related_query_name='hawb_otherpaymenttype', to='freightman.paymenttype')),
                ('payment_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='hawb_paymenttype', related_query_name='hawb_paymenttype', to='freightman.paymenttype')),
                ('received_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='airexportgoodsreceivedby', to=settings.AUTH_USER_MODEL)),
                ('shipper', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='hawb_shipper', related_query_name='hawb_shipper', to='freightman.addressbook')),
                ('supplier', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='hawb_suplier', to='freightman.organization')),
                ('to_1_airline', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='hawb_to1_airline', related_query_name='hawb_to1_airline', to='freightman.airline')),
                ('to_1_airport', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='hawb_to1_airport', related_query_name='hawb_to1_airport', to='freightman.airport')),
                ('to_2_airline', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='hawb_to2_airline', related_query_name='hawb_to2_airline', to='freightman.airline')),
                ('to_2_airport', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='hawb_to2_airport', related_query_name='hawb_to2_airport', to='freightman.airport')),
                ('to_3_airline', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='hawb_to3_airline', related_query_name='hawb_to3_airline', to='freightman.airline')),
                ('to_3_airport', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='hawb_to3_airport', related_query_name='hawb_to3_airport', to='freightman.airport')),
                ('wt_val_payment_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='hawb_wtvalpaymenttype', related_query_name='hawb_wtvalpaymenttype', to='freightman.paymenttype')),
            ],
        ),
        migrations.CreateModel(
            name='GoodsReferenceTypes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
            ],
            options={
                'unique_together': {('name',)},
            },
        ),
        migrations.CreateModel(
            name='FreightBookingStakeholderReference',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reference_number', models.CharField(max_length=50)),
                ('booking', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_query_name='booking_stakeholder_refs', to='freightman.freightbooking')),
                ('reference_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='freightman.stakeholderreferencetypes')),
            ],
        ),
        migrations.CreateModel(
            name='FreightBookingShippingService',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service', models.CharField(max_length=50)),
                ('booking', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_query_name='booking_shipping_service', to='freightman.freightbooking')),
            ],
        ),
        migrations.CreateModel(
            name='FreightBookingPortInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('booking', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_query_name='booking_portinfo', to='freightman.freightbooking')),
                ('country_of_destination', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='freightman.country')),
                ('port_of_destination', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='port_of_destination', to='freightman.airport')),
                ('port_of_loading', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='port_of_loading', to='freightman.airport')),
                ('terms_of_delivery', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='freightman.termsofdelivery')),
            ],
        ),
        migrations.CreateModel(
            name='FreightBookingPickupNote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pickup_date', models.DateField(max_length=50)),
                ('pickup_time_early', models.CharField(max_length=50)),
                ('pickup_time_latest', models.CharField(max_length=50)),
                ('pickup_instruction', models.TextField()),
                ('booking', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_query_name='booking_pickupnote', to='freightman.freightbooking')),
            ],
        ),
        migrations.CreateModel(
            name='FreightBookingPartyAddress',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_shipper', models.BooleanField(default=False)),
                ('is_consignee', models.BooleanField(default=False)),
                ('is_default_consignee', models.BooleanField(default=False)),
                ('is_consignor', models.BooleanField(default=False)),
                ('is_pickup', models.BooleanField(default=False)),
                ('is_delivery', models.BooleanField(default=False)),
                ('notify', models.BooleanField(default=False)),
                ('addressbook', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='freightman.addressbook')),
                ('booking', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_query_name='booking_address', to='freightman.freightbooking')),
            ],
        ),
        migrations.CreateModel(
            name='FreightBookingOrderNote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('delivery_instruction', models.TextField()),
                ('booking', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_query_name='booking_ordernote', to='freightman.freightbooking')),
                ('payment_instruction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='freightman.paymenttype')),
                ('transport_agreement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='freightman.transportagreement')),
            ],
        ),
        migrations.CreateModel(
            name='FreightBookingGoodsReferences',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reference_number', models.CharField(max_length=50)),
                ('goodsinfo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_query_name='booking_goodsinfo_refs', to='freightman.freightbookinggoodsinfo')),
                ('reference_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='freightman.goodsreferencetypes')),
            ],
        ),
        migrations.AddField(
            model_name='freightbookinggoodsinfo',
            name='package_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='freightman.packagetype'),
        ),
        migrations.CreateModel(
            name='FreightBookingBankBranch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('in_origin_leg', models.BooleanField(default=False)),
                ('in_destination_leg', models.BooleanField(default=False)),
                ('notify', models.BooleanField(default=False)),
                ('bank_branch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bankbranchbookinglink', related_query_name='bankbranchbookinglink', to='freightman.bankbranch')),
                ('booking', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookingbankbranchlink', related_query_name='bookingbankbranchlink', to='freightman.freightbooking')),
            ],
        ),
        migrations.AddField(
            model_name='freightbooking',
            name='org',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='freightman.organization'),
        ),
        migrations.CreateModel(
            name='CurrencyConversion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('conversion_rate', models.FloatField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('from_currency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='conversion_from_currency', related_query_name='conversion_from_currency', to='freightman.currency')),
                ('to_currency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='conversion_to_currency', related_query_name='conversion_to_currency', to='freightman.currency')),
            ],
        ),
        migrations.AddField(
            model_name='city',
            name='country',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='freightman.country'),
        ),
        migrations.CreateModel(
            name='AuthLevelPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level_name', models.CharField(max_length=30)),
                ('can_do_airexport_frt_booking', models.BooleanField(default=False)),
                ('can_access_airexport_frt_bookinglist', models.BooleanField(default=False)),
                ('can_access_airexport_hbl_create', models.BooleanField(default=False)),
                ('can_access_airexport_mbl_create', models.BooleanField(default=False)),
                ('can_access_airexport_hbl_list', models.BooleanField(default=False)),
                ('can_access_airexport_mbl_list', models.BooleanField(default=False)),
                ('can_access_airexport_consolidation', models.BooleanField(default=False)),
                ('can_access_airexport_invoice_create', models.BooleanField(default=False)),
                ('can_access_airexport_invoice_list', models.BooleanField(default=False)),
                ('can_access_airexport_job_costing_create', models.BooleanField(default=False)),
                ('can_access_airexport_job_costing_list', models.BooleanField(default=False)),
                ('can_access_airexport_gp_listing', models.BooleanField(default=False)),
                ('can_do_seaexport_frt_booking', models.BooleanField(default=False)),
                ('can_access_seaexport_frt_bookinglist', models.BooleanField(default=False)),
                ('can_access_seaexport_hbl_create', models.BooleanField(default=False)),
                ('can_access_seaexport_mbl_create', models.BooleanField(default=False)),
                ('can_access_seaexport_hbl_list', models.BooleanField(default=False)),
                ('can_access_seaexport_mbl_list', models.BooleanField(default=False)),
                ('can_access_seaexport_consolidation', models.BooleanField(default=False)),
                ('can_access_seaexport_invoice_create', models.BooleanField(default=False)),
                ('can_access_seaexport_invoice_list', models.BooleanField(default=False)),
                ('can_access_seaexport_job_costing_create', models.BooleanField(default=False)),
                ('can_access_seaexport_job_costing_list', models.BooleanField(default=False)),
                ('can_access_seaexport_gp_listing', models.BooleanField(default=False)),
                ('can_do_seaimport_frt_booking', models.BooleanField(default=False)),
                ('can_access_seaimport_frt_bookinglist', models.BooleanField(default=False)),
                ('can_access_seaimport_hbl_create', models.BooleanField(default=False)),
                ('can_access_seaimport_mbl_create', models.BooleanField(default=False)),
                ('can_access_seaimport_hbl_list', models.BooleanField(default=False)),
                ('can_access_seaimport_mbl_list', models.BooleanField(default=False)),
                ('can_access_seaimport_consolidation', models.BooleanField(default=False)),
                ('can_access_seaimport_invoice_create', models.BooleanField(default=False)),
                ('can_access_seaimport_invoice_list', models.BooleanField(default=False)),
                ('can_access_seaimport_job_costing_create', models.BooleanField(default=False)),
                ('can_access_seaimport_job_costing_list', models.BooleanField(default=False)),
                ('can_access_seaimport_gp_listing', models.BooleanField(default=False)),
                ('can_create_user', models.BooleanField(default=False)),
                ('can_list_user', models.BooleanField(default=False)),
                ('can_access_site_settings', models.BooleanField(default=False)),
                ('can_create_supplier', models.BooleanField(default=False)),
                ('can_list_supplier', models.BooleanField(default=False)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='freightman.organization')),
            ],
            options={
                'unique_together': {('organization', 'level_name')},
            },
        ),
        migrations.CreateModel(
            name='Airwaybill',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('awb_serial', models.CharField(max_length=8, unique=True, validators=[freightman.model_validators.validate_awb_serial_length])),
                ('expire_date', models.DateField()),
                ('agent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='freightman.awbagent')),
                ('airline', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='freightman.airline')),
            ],
        ),
        migrations.CreateModel(
            name='AirExportDebitNoteCosting',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.FloatField()),
                ('is_unit_cost', models.BooleanField()),
                ('entry_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('charge_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='freightman.chargetype')),
                ('currency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='debitnotecostingcurrency', to='freightman.currency')),
                ('debit_note', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='debitnotecosting', related_query_name='debitnotecosting', to='freightman.airexportconsolidatedshipmentdebitnote')),
                ('entry_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='AirExportCreditNoteCosting',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.FloatField()),
                ('is_unit_cost', models.BooleanField()),
                ('entry_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('charge_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='freightman.chargetype')),
                ('credit_note', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='creditnotecosting', related_query_name='creditnotecosting', to='freightman.airexportconsolidatedshipmentcreditnote')),
                ('currency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='creditnotecostingcurrency', to='freightman.currency')),
                ('entry_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='AirExportConsolidatedShipmentJobCosting',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_shipment_cost', models.BooleanField(default=False)),
                ('value', models.FloatField()),
                ('is_unit_cost', models.BooleanField()),
                ('charge_applies_to_hawb', models.BooleanField(default=False)),
                ('for_specific_hawb', models.BooleanField(default=False)),
                ('entry_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('charge_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='freightman.chargetype')),
                ('consolidated_shipment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='airexportconsoljobcosting', related_query_name='airexportconsoljobcosting', to='freightman.airexportconsolidatedshipment')),
                ('currency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='airexportconsoljobcostingcurrency', to='freightman.currency')),
                ('currency_conversion', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='airexportconsoljobcostingcurrencyconversion', to='freightman.currencyconversion')),
                ('entry_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('hawb', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='airexptconjobcostngshptcosthawb', to='freightman.hawb')),
            ],
        ),
        migrations.AddField(
            model_name='airexportconsolidatedshipmentdebitnote',
            name='currency',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='airexptconsshptdebitnotedcurrency', to='freightman.currency'),
        ),
        migrations.AddField(
            model_name='airexportconsolidatedshipmentdebitnote',
            name='entry_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='airexportconsolidatedshipmentdebitnote',
            name='forwarder',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='airexptconsshptdebitnoteforwarder', to='freightman.organization'),
        ),
        migrations.AddField(
            model_name='airexportconsolidatedshipmentdebitnote',
            name='hawb',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='freightman.hawb'),
        ),
        migrations.AddField(
            model_name='airexportconsolidatedshipmentdebitnote',
            name='target_currency_conversion',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='airexptconsshptdebitnotedisplaycurrencyconversion', to='freightman.currencyconversion'),
        ),
        migrations.AddField(
            model_name='airexportconsolidatedshipmentcreditnote',
            name='currency',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='airexptconsshptcreditnotedcurrency', to='freightman.currency'),
        ),
        migrations.AddField(
            model_name='airexportconsolidatedshipmentcreditnote',
            name='entry_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='airexportconsolidatedshipmentcreditnote',
            name='forwarder',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='airexptconsshptcreditnoteforwarder', to='freightman.organization'),
        ),
        migrations.AddField(
            model_name='airexportconsolidatedshipmentcreditnote',
            name='hawb',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='freightman.hawb'),
        ),
        migrations.AddField(
            model_name='airexportconsolidatedshipmentcreditnote',
            name='target_currency_conversion',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='airexptconsshptcreditnotedisplaycurrencyconversion', to='freightman.currencyconversion'),
        ),
        migrations.AddField(
            model_name='airexportconsolidatedshipment',
            name='forwarder',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='freightman.organization'),
        ),
        migrations.AddField(
            model_name='airexportconsolidatedshipment',
            name='house',
            field=models.ManyToManyField(related_name='consolidatedshipment_house', related_query_name='consolidatedshipment_house', through='freightman.AirExportConsolHouseMap', to='freightman.HAWB'),
        ),
        migrations.AddField(
            model_name='airexportconsolidatedshipment',
            name='mawb',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='consolidated_mawb', related_query_name='consolidated_mawb', to='freightman.mawb'),
        ),
        migrations.AddField(
            model_name='airexportconsolhousemap',
            name='consolidated_shipment',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='freightman.airexportconsolidatedshipment'),
        ),
        migrations.AddField(
            model_name='airexportconsolhousemap',
            name='hawb',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='freightman.hawb'),
        ),
        migrations.AddField(
            model_name='addressbook',
            name='city',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='freightman.city'),
        ),
        migrations.AddField(
            model_name='addressbook',
            name='country',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='freightman.country'),
        ),
        migrations.AddField(
            model_name='addressbook',
            name='organization',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_query_name='org_address', to='freightman.organization'),
        ),
        migrations.AddField(
            model_name='systemuser',
            name='time_zone',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='freightman.timezone'),
        ),
        migrations.AddField(
            model_name='systemuser',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
        migrations.CreateModel(
            name='UserAuthLevel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('auth_level', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='freightman.authlevelpermissions')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'auth_level')},
            },
        ),
        migrations.CreateModel(
            name='State',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('country', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='freightman.country')),
            ],
            options={
                'unique_together': {('country', 'name')},
            },
        ),
        migrations.CreateModel(
            name='ServiceProviderMap',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('customer_org', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='customerorg', to='freightman.organization')),
                ('service_provider_org', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='serviceproviderorg', to='freightman.organization')),
            ],
            options={
                'unique_together': {('service_provider_org', 'customer_org')},
            },
        ),
        migrations.CreateModel(
            name='PostCode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.IntegerField()),
                ('country', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='freightman.country')),
            ],
            options={
                'unique_together': {('country', 'code')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='city',
            unique_together={('country', 'name')},
        ),
        migrations.CreateModel(
            name='BookingListener',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254)),
                ('added_at', models.DateTimeField(auto_now_add=True)),
                ('added_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('email',)},
            },
        ),
        migrations.CreateModel(
            name='AWBAgentAirlinesMap',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('agent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='freightman.awbagent')),
                ('airline', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='freightman.airline')),
            ],
            options={
                'unique_together': {('airline', 'agent')},
            },
        ),
        migrations.CreateModel(
            name='AirExportConsolidatedShipmentFlightInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('flight_number', models.CharField(max_length=30)),
                ('flight_date', models.DateField()),
                ('departure_date', models.DateField()),
                ('departure_note', models.TextField(blank=True, default='')),
                ('arrival_date', models.DateField()),
                ('arrival_note', models.TextField(blank=True, default='')),
                ('note', models.TextField(blank=True, default='')),
                ('airline', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='airline_airexportconsolshptfltinfo', related_query_name='airline_airexportconsolshptfltinfo', to='freightman.airline')),
                ('arrival_airport', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='arriveairport_airexportconsolshptfltinfo', related_query_name='arriveairport_airexportconsolshptfltinfo', to='freightman.airport')),
                ('arrival_country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='arrivecountry_airexportconsolshptfltinfo', related_query_name='arrivecountry_airexportconsolshptfltinfo', to='freightman.country')),
                ('awb', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='awb_airexportconsolshptfltinfo', related_query_name='awb_airexportconsolshptfltinfo', to='freightman.airwaybill')),
                ('co_loader', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='awbagent_airexportconsolshptfltinfo', related_query_name='awbagent_airexportconsolshptfltinfo', to='freightman.awbagent')),
                ('consolidated_shipment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='airexportconsolshptfltinfo', related_query_name='airexportconsolshptfltinfo', to='freightman.airexportconsolidatedshipment')),
                ('departure_airport', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='departairport_airexportconsolshptfltinfo', related_query_name='departairport_airexportconsolshptfltinfo', to='freightman.airport')),
                ('departure_country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='departcountry_airexportconsolshptfltinfo', related_query_name='departcountry_airexportconsolshptfltinfo', to='freightman.country')),
            ],
            options={
                'unique_together': {('consolidated_shipment', 'airline', 'co_loader', 'awb', 'flight_number', 'flight_date', 'departure_country', 'departure_airport', 'departure_date', 'arrival_country', 'arrival_airport', 'arrival_date')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='airexportconsolidatedshipmentdebitnote',
            unique_together={('consolidated_shipment', 'to_who')},
        ),
        migrations.AlterUniqueTogether(
            name='airexportconsolidatedshipmentcreditnote',
            unique_together={('consolidated_shipment', 'to_who')},
        ),
    ]
